#!/bin/bash

help()
{
    echo "Helper to automate some processes from the lcd device driver"
    echo "Usage:"
    echo "./lcd operation [value]"
    echo "operation -> "
    echo "setup: build and install the kernel module, permits read and write to /dev/lcd_device_driver/config /dev/lcd_device_driver/data file"
    echo "teardown: uninstall the kernel module, and cleans the folder"
    echo "comando: configuration operation writes in /dev/lcd_device_driver/config, requires value parameter"
    echo "escrita: write operation writes in /dev/lcd_device_driver/data, requires value parameter"
    echo "ler_dado: reads last written value from /dev/lcd_device_driver/data"
    echo "ler_config: reads current configuration from /dev/lcd_device_driver/config"
    echo "ler: reads both files similarly to ler_dado and ler_config"
}

setup()
{
    make
    sudo insmod lcd_device_driver.ko
    dmesg | tail -1
    sudo chmod 777 /dev/lcd_device_driver/data 
    sudo chmod 777 /dev/lcd_device_driver/config 
}

teardown()
{
    sudo rmmod lcd_device_driver
    make clean
    dmesg | tail -1
}

verify_second_argument()
{
    if [ $1 -lt 2 ]; then
        echo "Must pass second argument. Usage: pass 'help' as argument to the script"
        false
        return $?
    fi
    true
}


case $1 in
    "setup")
        setup
        exit;;
    "teardown")
        teardown
        exit;;
    "help")
        help
        exit;;
    "comando")
        if verify_second_argument $#; then
            sudo echo -n $2 > /dev/lcd_device_driver/config
        fi
        exit;;
    "escrita")
        if verify_second_argument $#; then
            sudo echo -n $2 > /dev/lcd_device_driver/data
        fi
        exit;;
    "ler_dado")
        sudo cat /dev/lcd_device_driver/data
        exit;;
    "ler_config")
        sudo cat /dev/lcd_device_driver/config
        exit;;
    "ler")
        sudo cat /dev/lcd_device_driver/data
        sudo cat /dev/lcd_device_driver/config
        exit;;
    *) 
        echo "Invalid operation. Usage: pass 'help' as argument"
        exit;;
esac
